---
interface Props {
  images: Array<{
    id: number;
    url: string;
    title: string;
    description: string;
    date: string;
  }>;
}

const { images } = Astro.props;
---

<div
  id="imageModal"
  class="fixed inset-0 bg-black bg-opacity-90 z-50 hidden flex items-center justify-center"
>
  <button
    id="prevButton"
    class="absolute left-4 text-white text-4xl hover:text-blue-300 transition-colors"
    aria-label="Image précédente"
  >
    &#10094;
  </button>

  <div class="max-w-4xl mx-auto px-4">
    <div class="relative">
      <img
        id="modalImage"
        src=""
        alt=""
        class="max-h-[80vh] w-auto mx-auto"
      />
      <div class="text-white mt-4">
        <h3 id="modalTitle" class="text-xl font-bold"></h3>
        <p id="modalDescription" class="text-gray-300"></p>
        <p id="modalDate" class="text-sm text-gray-400 mt-2"></p>
      </div>
    </div>
  </div>

  <button
    id="nextButton"
    class="absolute right-4 text-white text-4xl hover:text-blue-300 transition-colors"
    aria-label="Image suivante"
  >
    &#10095;
  </button>

  <button
    id="closeModal"
    class="absolute top-4 right-4 text-white text-4xl hover:text-blue-300 transition-colors"
    aria-label="Fermer"
  >
    &times;
  </button>
</div>

<script define:vars={{ images }}>
  let currentImageIndex = 0;
  const modal = document.getElementById('imageModal');
  const modalImage = document.getElementById('modalImage');
  const modalTitle = document.getElementById('modalTitle');
  const modalDescription = document.getElementById('modalDescription');
  const modalDate = document.getElementById('modalDate');
  const prevButton = document.getElementById('prevButton');
  const nextButton = document.getElementById('nextButton');
  const closeButton = document.getElementById('closeModal');

  function updateModalContent(index) {
    const image = images[index];
    modalImage.src = image.url;
    modalTitle.textContent = image.title;
    modalDescription.textContent = image.description;
    modalDate.textContent = new Date(image.date).toLocaleDateString('fr-FR');
  }

  function openModal(index) {
    currentImageIndex = index;
    updateModalContent(index);
    modal.classList.remove('hidden');
    document.body.style.overflow = 'hidden';
  }

  function closeModal() {
    modal.classList.add('hidden');
    document.body.style.overflow = 'auto';
  }

  function showPrevImage() {
    currentImageIndex = (currentImageIndex - 1 + images.length) % images.length;
    updateModalContent(currentImageIndex);
  }

  function showNextImage() {
    currentImageIndex = (currentImageIndex + 1) % images.length;
    updateModalContent(currentImageIndex);
  }

  // Event listeners
  document.querySelectorAll('[data-gallery-image]').forEach((img, index) => {
    img.addEventListener('click', () => openModal(index));
  });

  prevButton.addEventListener('click', showPrevImage);
  nextButton.addEventListener('click', showNextImage);
  closeButton.addEventListener('click', closeModal);

  // Keyboard navigation
  document.addEventListener('keydown', (e) => {
    if (modal.classList.contains('hidden')) return;
    
    switch(e.key) {
      case 'ArrowLeft':
        showPrevImage();
        break;
      case 'ArrowRight':
        showNextImage();
        break;
      case 'Escape':
        closeModal();
        break;
    }
  });
</script>